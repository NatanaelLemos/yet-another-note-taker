@inject INotebooksService _notebooksService
@inject INotesService _notesService
@inject IUserState _userState
@inject NavigationManager _navigation


<h2>@(notebook?.Name ?? "All notes")</h2>

<table class="table table-striped table-hover">
    <tbody>
        @foreach (var note in notes)
        {
            <tr>
                <td>
                    @note.Name
                </td>
            </tr>
        }
    </tbody>
</table>

@code {

    [Parameter]
    public string NotebookKey { get; set; }

    private NotebookDto notebook;
    private List<NoteDto> notes = new List<NoteDto>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender && notebook?.Key == NotebookKey)
        {
            return;
        }

        var userEmail = await _userState.GetUserEmail();

        if (string.IsNullOrWhiteSpace(NotebookKey))
        {
            notes = await _notesService.GetAll(userEmail);
        }
        else
        {
            notebook = await _notebooksService.Get(userEmail, NotebookKey);
            notes = await _notesService.GetByNotebookKey(userEmail, NotebookKey);
        }

        StateHasChanged();
        await base.OnAfterRenderAsync(firstRender);
    }
}