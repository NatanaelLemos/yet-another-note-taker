@page  "/notebooks/{NotebookKey}/notes/editor"

@inject IJSRuntime JsRuntime
@inject IEventBroker _eventBroker

<link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.7.1/katex.min.css" />
<link rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/monokai-sublime.min.css" />
<link rel="stylesheet" href="css/quill_light.css" />

<div class="crud-actions">
    <button class="btn btn-primary" @onclick="Save">Save</button>
    <button class="btn btn-danger" @onclick="Cancel">Cancel</button>
</div>

<h2>
    New note
</h2>

<div>
    <label for="name">Note name</label>
    <input type="text" class="form-control" id="name" aria-describedby="name" placeholder="Note name" @bind-value="name">
</div>

<div id="quill-div">
    <div id="toolbar-container">
        <span class="ql-formats">
            <select class="ql-font"></select>
            <select class="ql-size"></select>
        </span>
        <span class="ql-formats">
            <button class="ql-bold"></button>
            <button class="ql-italic"></button>
            <button class="ql-underline"></button>
        </span>
        <span class="ql-formats">
            <select class="ql-color"></select>
            <select class="ql-background"></select>
        </span>
        <span class="ql-formats">
            <button class="ql-script" value="sub"> </button>
            <button class="ql-script" value="super"></button>
        </span>
        <span class="ql-formats">
            <button class="ql-header" value="1"></button>
            <button class="ql-header" value="2"></button>
            <button class="ql-blockquote"></button>
            <button class="ql-code-block"></button>
        </span>
        <span class="ql-formats">
            <button class="ql-list" value="ordered"></button>
            <button class="ql-list" value="bullet"></button>
            <button class="ql-indent" value="-1"></button>
            <button class="ql-indent" value="+1"></button>
            <button value="todo" id="btnTodo">
                <svg class="" viewbox="0 0 18 18">
                    <line class="ql-stroke" x1="9" x2="15" y1="4" y2="4"></line>
                    <polyline class="ql-stroke" points="3 4 4 5 6 3"></polyline>
                    <line class="ql-stroke" x1="9" x2="15" y1="14" y2="14"></line>
                    <polyline class="ql-stroke" points="3 14 4 15 6 13"></polyline>
                    <line class="ql-stroke" x1="9" x2="15" y1="9" y2="9"></line>
                    <polyline class="ql-stroke" points="3 9 4 10 6 8"></polyline>
                </svg>
            </button>
        </span>
        <span class="ql-formats">
            <select class="ql-align"></select>
            <button class="ql-link"></button>
            <button class="ql-image"></button>
        </span>
    </div>
    <div id="editor-container">
    </div>
</div>

@code{

    [Parameter]
    public string NotebookKey { get; set; }

    private string name;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JsRuntime.InvokeVoidAsync("startQuill", "'hahahah'");
        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task Save()
    {
        var quillContent = await JsRuntime.InvokeAsync<string>("getQuillContent");
        await _eventBroker.Notify(new YetAnotherNoteTaker.Client.Common.Events.NoteEvents.EditNoteCommand(
                    NotebookKey,
                    string.Empty,
                    name,
                    quillContent));

        await JsRuntime.InvokeVoidAsync("window.history.back");
    }

    private async Task Cancel()
    {
        await JsRuntime.InvokeVoidAsync("window.history.back");
    }

}